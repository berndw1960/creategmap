pygmap3.py, a script to build maps for GARMIN PNAs

Work in progress, be sure, that you use it in
the knowledge, that it can be harmful for your data,
but i hope, it's safe.

tested with
eTrex Vista Hcx
eTrex Legend
Oregon 4x0
Oregon 6x0
Oregom 7x0
some NÃ¼vis

Edge Explore 2 

Tools will be installed by the script:

    mkgmap and splitter from
    http://www.mkgmap.org.uk
    and some other things


You can use the bash script mk_osmtools in this repository
to create this tools, needs cc installed

    osmconvert
    http://wiki.openstreetmap.org/wiki/osmconvert
    osmupdate
    http://wiki.openstreetmap.org/wiki/osmupdate
    osmfilter
    http://wiki.openstreetmap.org/wiki/osmfilter


phyghtmap comes with an install routine

    phyghtmap (to create the contourlines)
    http://katze.tfiu.de/projects/phyghtmap/
    please use the version 2.21 or later!



Description:

mapset.py -     if you want to build more than one mapset, as example dach and
                germany.

                mapset.py -h shows a help

pygmap3.py -    the main script, start it without any option to create map
                for Germany with the default style of mkgmap

                you need a poly file of the region, 
                if you want to build yourchoice of region, store this file 
                in the subfolder poly.
                search for osm2poly and poly2osm in the web, if you want to
                create a poly file from scratch.

                you can also use rawdata files like germany-latest.osm.pbf from
                https://download.geofabrik.de
                store this file in a subfolder of the work dir named pbf.
                the same is possible with o5m files, store these files in the
                subfolder o5m.
                files with names like germany or germany-latest.[pbf|o5m] can be used.
                to prevent large updates, download a poly for this region, too, and 
                store it in the folder poly.                i

                it is also possible to use a planet file to create the raw data, but
                this download is huge, in 2020 ~55 GB.
                extracting raw data from a planet is slow, so try to use smaller
                extracts

                all raw data from pbf files will be converted to o5m,
                stored, updated and used in future builds.

                if you want to create your maps with your own styles,
                you have to do some work:

                    add a folder named {your_map}_style and a textbased file
                    named {your_map}_typ.txt to the folder 'styles'

                you can also use our fork of the AIO, copy the complete
                repository to 'styles'

                pygmap3.py -h shows a help
                pygmap3.py -m basemap enable the build of our basemap style

planet_up.py -  download  a complete planet from openstreetmap.org or update it


all other *.py are helper for 'pygmap3.py', they must be in the same folder!



                #### Examples ####

Crontab:

                # all regions on wednesday
                02 3 * * 3 mapset.py -bw >/dev/null 2>&1

                # only daily builds on thursday until tuesday
                03 3 * * 0-2,4-6 mapset.py >/dev/null 2>&1

                II: mapset list includes: 

Output mapset -lm with defined regions:

                enabled for daily build:
                  germany

                enabled for weekly build:
                  switzerland
                  alps
                  bonn

                disabled:
                  poland
                  france
                  spain
                  italy
