diff --git a/fetch.py b/fetch.py
index 6c1eb07..14afa92 100644
--- a/fetch.py
+++ b/fetch.py
@@ -39,7 +39,7 @@ def fetch():
   if ExitCode == True:
     ExitCode = os.path.exists("poly/" + (buildmap) + ".poly")
     if ExitCode == True:
-      printinfo("I'm now extracting " + (buildmap) + ".o5m from Planet")
+      printinfo("I'm now extracting " + (buildmap) + ".o5m from Planet, please wait...")
       os.system("osmconvert planet.o5m " +
                 "--complete-ways --complex-ways " +
                 " -B=poly/" + (buildmap) + ".poly " +
diff --git a/mkgmap.py b/mkgmap.py
index 72c899b..ba3bb31 100644
--- a/mkgmap.py
+++ b/mkgmap.py
@@ -66,8 +66,8 @@ def render():
         printerror(" Please convert " +
             (mapstyle) + "/" + (layer) + ".TYP to " + (layer) + "_typ.txt!")
         quit()
-        
-        
+
+
       """
       create dirs to store the images
 
@@ -113,16 +113,14 @@ def render():
       option_mkgmap_options = " --read-config=" + (WORK_DIR) + (mapstyle) + "/" + (layer) + "_style/options "
 
 
-      logging = config.get('mkgmap', 'logging')
-      if logging == "yes":
+      if config.get('mkgmap', 'logging') == "yes":
         printinfo("logging enabled")
         option_mkgmap_logging = " -Dlog.config=" + (WORK_DIR) + "log.conf "
       else:
         printwarning("logging disabled")
         option_mkgmap_logging = " "
 
-      bounds = config.get('navmap', 'bounds')
-      if bounds == "yes":
+      if config.get('navmap', 'bounds') == "yes":
         printinfo ("use precompiled bounds")
         option_bounds = " --bounds=" + (WORK_DIR) + "bounds.zip "
         option_sea = " --precomp-sea=" + (WORK_DIR) + "sea.zip  --generate-sea "
@@ -130,8 +128,7 @@ def render():
         option_bounds = " --location-autofill=is_in, nearest "
         option_sea = " --generate-sea=extend-sea-sectors,close-gaps=6000,floodblocker,land-tag=natural=background "
 
-      check_styles = config.get('mkgmap', 'check_styles')
-      if check_styles == "yes":
+      if config.get('mkgmap', 'check_styles') == "yes":
         printinfo("check_styles enabled")
         option_1 = " --check-styles "
         option_check_styles = str(option_1)
@@ -139,8 +136,7 @@ def render():
         printwarning("check_styles disabled")
         option_check_styles = " "
 
-      list_styles = config.get('mkgmap', 'list_styles')
-      if list_styles == "yes":
+      if config.get('mkgmap', 'list_styles') == "yes":
         printinfo("list_styles enabled")
         option_2 = " --list-styles "
         option_list_styles = str(option_2)
@@ -182,15 +178,14 @@ def render():
       ExitCode = os.path.exists((unzip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img")
       if ExitCode == True:
         os.remove((unzip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img")
-      os.system("cp gmapsupp.img " + (unzip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img")
+      os.system("mv gmapsupp.img " + (unzip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img")
 
       """
       zipp the images and mv them to separate dirs
 
       """
 
-      zip_img = (config.get('store_as', 'zip_img'))
-      if zip_img == "yes":
+      if (config.get('store_as', 'zip_img')) == "yes":
         os.chdir(unzip_dir)
         os.system(("zip ") + (buildmap) + "_" + (layer) + "_gmapsupp.img.zip " + (buildmap) + "_" + (layer) + "_gmapsupp.img")
         ExitCode = os.path.exists((zip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img.zip")
@@ -198,14 +193,21 @@ def render():
           os.remove((zip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img.zip")
         os.system(("mv ") + (buildmap) + "_" + (layer) + "_gmapsupp.img.zip " + (zip_dir))
 
+      if (config.get('store_as', '7z_img')) == "yes":
+        os.chdir(unzip_dir)
+        os.system(("7z a  ") + (buildmap) + "_" + (layer) + "_gmapsupp.img.7z " + (buildmap) + "_" + (layer) + "_gmapsupp.img")
+        ExitCode = os.path.exists((zip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img.7z")
+        if ExitCode == True:
+          os.remove((zip_dir) + (buildmap) + "_" + (layer) + "_gmapsupp.img.7z")
+        os.system(("mv ") + (buildmap) + "_" + (layer) + "_gmapsupp.img.7z " + (zip_dir))
+
       """
       save the mkgmap-log for errors
       """
       os.chdir(WORK_DIR)
-      logging = config.get('mkgmap', 'logging')
-      if logging == "yes":
-        log_dir = ((WORK_DIR) + "log/" + (buildmap) + "/" + (buildday) + "/" + (layer) + "/")
 
+      if config.get('mkgmap', 'logging') == "yes":
+        log_dir = ((WORK_DIR) + "log/" + (buildmap) + "/" + (buildday) + "/" + (layer) + "/")
 
         ExitCode = os.path.exists(log_dir)
         if ExitCode == True:
@@ -220,9 +222,9 @@ def render():
         elif ExitCode == False:
           os.makedirs(log_dir)
 
-      ExitCode = os.path.exists("mkgmap.log.0")
+      ExitCode = os.path.exists((layer) + "/mkgmap.log.0")
       if ExitCode == True:
-        os.system("mv mkgmap.log.* " + (log_dir))
+        os.system("mv " + (layer) + "/mkgmap.log.* " + (log_dir))
 
       """
       copy *kml to zipp-dirs
diff --git a/navmap.py b/navmap.py
index bbd2aa2..5d2ddd7 100644
--- a/navmap.py
+++ b/navmap.py
@@ -30,10 +30,10 @@ def bounds():
   """
 
   if config.get('navmap', 'bounds') == "yes":
-   
+
     ExitCode = os.path.exists("sea.zip")
     if ExitCode == False:
-      printerror("precompiled sea_bound in sea.zip not found")
+      printerror("precompiled sea_bounds in sea.zip not found")
       printerror("please download the precompiled sea_bounds from")
       printerror("http://www.navmaps.org/boundaries")
       printerror("and store as sea.zip")
@@ -45,6 +45,5 @@ def bounds():
       printerror("please download the precompiled bounds from")
       printerror("http://www.navmaps.org/boundaries")
       printerror("and store as bounds.zip")
-      quit() 
-    
-    
\ No newline at end of file
+      quit()
+
diff --git a/pygmap3.py b/pygmap3.py
index 5544e5d..36f6a8c 100755
--- a/pygmap3.py
+++ b/pygmap3.py
@@ -14,9 +14,9 @@ with this program; if not, see http://www.gnu.org/licenses/.
 
 
 """
-__version__ = "0.9.47"
+__version__ = "0.9.48"
 __author__ = "Bernd Weigelt"
-__copyright__ = "Copyright 2012 Bernd Weigelt"
+__copyright__ = "Copyright 2013 Bernd Weigelt"
 __credits__ = "Dschuwa, Franco B."
 __license__ = "AGPLv3"
 __maintainer__ = "Bernd Weigelt"
@@ -88,15 +88,14 @@ parser = argparse.ArgumentParser(
 
             To build maps for Garmin PNA
 
-            Basemap (embedded)
-            Bikemap (embedded)
+            Basemap
+            Bikemap
             FIXME (possible)
             Contourlines (possible)
 
             additional maps
             RadReiseKarte by Aighes (possible)
 
-
             The AIO-Style is Public Domain
             The RRK-Style is CC-BY 2.0 --> http://www.aighes.de/OSM/index.php
             The FZK-Style is copyrighted by Klaus Tockloth
@@ -179,7 +178,7 @@ def is_there(find, solutionhint):
 hint = "osmconvert missed, needed to cut data from the planet.o5m"
 checkprg("osmconvert", hint)
 
-hint = "Install: 7z to extract mkgmap's stylefiles"
+hint = "Install: 7z to store the images"
 checkprg("7z", hint)
 
 ExitCode = os.path.exists(WORK_DIR)
@@ -216,6 +215,10 @@ def write_config():
 config = configparser.ConfigParser()
 ExitCode = os.path.exists("pygmap3.cfg")
 if ExitCode == False:
+  """
+  create a default config
+
+  """
   config['DEFAULT'] = {}
 
   config['ramsize'] = {}
@@ -223,13 +226,13 @@ if ExitCode == False:
 
   config['mapid'] = {}
   config['mapid'] = {'mapid': '6389',}
-  
+
   config['dach'] = {}
   config['dach'] = {'mapid': '6500',}
 
   config['germany'] = {}
   config['germany'] = {'mapid': '6501'}
-  
+
   config['mapdata'] = {}
   config['mapdata'] = {'buildday': '2013_xx_yy'}
 
@@ -284,7 +287,6 @@ if ExitCode == False:
                    'draw-priority': '12',
                    'mapid_ext': '4001',}
 
-
   config['fixme'] = {}
   config['fixme'] = {'family-id': '3',
                      'product-id': '33',
@@ -296,8 +298,8 @@ if ExitCode == False:
   config['contourlines'] = {'build': 'no'}
 
   config['store_as'] = {}
-  config['store_as'] = {'zip_img': 'no',}
-
+  config['store_as'] = {'zip_img': 'no',
+                        '7z_img': 'no',}
 
 elif ExitCode == True:
   config.read('pygmap3.cfg')
@@ -345,14 +347,14 @@ or as default
 mapid = 6389
 
 """
-  
+
 if (config.has_option((buildmap), 'mapid')) == True:
   option_mapid = config.get((buildmap), 'mapid')
 else:
   option_mapid = config.get('mapid', 'mapid')
 
 config.set('runtime', 'option_mapid', (option_mapid))
-write_config() 
+write_config()
 
 """
 create dir for areas. poly and splitter-output
@@ -402,6 +404,7 @@ else:
   printwarning("keep_data switched on!")
   ExitCode = os.path.exists(BUILD_O5M)
   if ExitCode == False:
+    printwarning("old mapdata not found, create O5M from Planet...!")
     fetch.fetch()
 
 """
@@ -460,11 +463,9 @@ create the contourlines
 
 """
 
-build = (config.get('contourlines', 'build'))
-if build == "yes":
-  contourlines.create_cont()
-
 
+if (config.get('contourlines', 'build')) == "yes":
+  contourlines.create_cont()
 
 os.chdir(WORK_DIR)
 
@@ -478,6 +479,10 @@ quit()
 """
 
 ## Changelog
+
+v0.9.48 - add 7z as output for the images
+        - mapid for DACH and germany
+
 v0.9.47 - navmaps.eu is down, use navmaps.org manually
 
 v0.9.46 - boundaries and precomp_sea from navmaps.eu
